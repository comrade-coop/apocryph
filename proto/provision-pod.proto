syntax = "proto3";
package apocryph.proto.v0.provisionPod;

option go_package = "github.com/comrade-coop/trusted-pods/pkg/proto";
import "pod.proto";
service ProvisionPodService {
  rpc ProvisionPod(ProvisionPodRequest) returns (ProvisionPodResponse);
  rpc UpdatePod(UpdatePodRequest) returns (ProvisionPodResponse);
  rpc DeletePod(DeletePodRequest) returns (DeletePodResponse);
  rpc GetPodLogs(PodLogsRequest) returns (PodLogResponse);
}

message ProvisionPodRequest {
  bytes podManifestCid = 1;
  repeated Key keys = 2;
  PaymentChannel payment = 3;
}

message DeletePodRequest {
  string namespace = 3;
  repeated Key keys = 2;
}
message DeletePodResponse{
  string namespace = 1;
  string error =  2;
}

message UpdatePodRequest {
  string namespace = 1;
  pod.Pod pod = 2;
  repeated Key keys = 3;
}
message UpdatePodResponse {
  string status = 2;
  string error = 3;
}

message PaymentChannel {
  bytes chainID = 1;
  bytes contractAddress = 2;
  bytes publisherAddress = 3;
  bytes providerAddress = 4;
  bytes podID = 5;
  bytes tokenAddress = 6;
}

message Key {
  bytes data = 1;
}

message ProvisionPodResponse {
  string error = 1;
  repeated ExposedHostPort addresses = 2;
  string namespace = 3;
  message ExposedHostPort {
    string multiaddr = 1;
    string containerName = 2;
    uint64 containerPort = 3;
  }
}

message PodLogsRequest{
  string containerName = 1;
}

message PodLogResponse{
repeated LogEntry logEntries =1;
}

message LogEntry{
  uint64 NanosecondsUnixEpoch = 1;
  string log = 2;
  string stream = 3;
  string time = 4;
}
