// SPDX-License-Identifier: GPL-3.0

syntax = "proto3";
package apocryph.proto.v0.provisionPod;

import "pod.proto";

option go_package = "github.com/comrade-coop/apocryph/pkg/proto";

service ProvisionPodService {
  rpc ProvisionPod(ProvisionPodRequest) returns (ProvisionPodResponse);
  rpc UpdatePod(UpdatePodRequest) returns (ProvisionPodResponse);
  rpc DeletePod(DeletePodRequest) returns (DeletePodResponse);
  rpc GetPodLogs(PodLogRequest) returns (stream PodLogResponse);
}

message ProvisionPodRequest {
  pod.Pod pod = 1;
  PaymentChannel payment = 3;
}

message DeletePodRequest {}

message DeletePodResponse {
  bool success = 1;
  string error = 2;
}

message UpdatePodRequest {
  pod.Pod pod = 1;
  PaymentChannel payment = 2;
}
message UpdatePodResponse {
  bool success = 1;
  string error = 2;
}

message PaymentChannel {
  bytes chainID = 1;
  bytes contractAddress = 2;
  bytes publisherAddress = 3;
  bytes providerAddress = 4;
  bytes podID = 5;
}

message ProvisionPodResponse {
  string error = 1;
  repeated ExposedHostPort addresses = 2;
  string namespace = 3;
  string verificationHost = 4;
  message ExposedHostPort {
    string multiaddr = 1;
    string containerName = 2;
    uint64 containerPort = 3;
  }
}

message PodLogRequest {
  string ContainerName = 1;
}

message PodLogResponse {
  LogEntry logEntry = 1;
}

message LogEntry {
  uint64 NanosecondsUnixEpoch = 1;
  string line = 2;
}
