// SPDX-License-Identifier: GPL-3.0

syntax = "proto3";
package apocryph.proto.v0.pod;

option go_package = "github.com/comrade-coop/apocryph/pkg/proto";

message Pod {
  repeated Container containers = 1;
  repeated Volume volumes = 2;
  Replicas replicas = 3;
  KeyPair keyPair = 4;
}

message Container {
  string name = 1;
  Image image = 2;
  repeated string entrypoint = 3;
  repeated string command = 4;
  string workingDir = 5;
  repeated Port ports = 6;
  map<string, string> env = 7;
  repeated VolumeMount volumes = 8;
  repeated Resource resourceRequests = 9; // "cpu", "memory", custom

  message Image {
    bytes cid = 1;
    Key key = 2;
    string url = 3;
  }

  message Port {
    string name = 1;
    uint64 containerPort = 2;
    uint64 servicePort = 3;
    oneof exposedPort {
      string hostHttpHost = 4;
      // string hostHttpsHost = 4;
      uint64 hostTcpPort = 5;
      // uint64 hostUdpPort = 6;
      // uint64 servicePort = 7;
    }
  }

  message VolumeMount {
    string name = 1;
    string mountPath = 2;
    bool readOnly = 3;
  }
}

message Volume {
  enum Type {
    VOLUME_EMPTY = 0;
    VOLUME_FILESYSTEM = 1;
    VOLUME_SECRET = 2;
  }
  enum AccessMode {
    VOLUME_RW_ONE = 0;
    // VOLUME_RO_MANY = 1;
    VOLUME_RW_MANY = 2;
  }
  string name = 1;
  Type type = 2;
  AccessMode accessMode = 3;
  oneof configuration {
    FilesystemConfig filesystem = 4;
    SecretConfig secret = 5;
  }
  message FilesystemConfig {
    repeated Resource resourceRequests = 1; // "storage"
  }
  message SecretConfig {
    bytes cid = 1;
    Key key = 2;
    string file = 101;
    bytes contents = 102;
    string contentsString = 103;
  }
}

message Replicas {
  uint32 min = 1;
  uint32 max = 2;
  uint32 targetPendingRequests = 3;
}

message Resource {
  string resource = 1;
  oneof quantity {
    uint64 amount = 2;
    uint64 amountMillis = 3;
  }
}

message Key {
  bytes data = 1;
}

message KeyPair {
    Key key = 1;
    bytes  privateKey= 2;
    string pubAddress = 3;
}
