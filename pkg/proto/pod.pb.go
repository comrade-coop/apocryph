// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: pod.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Volume_Type int32

const (
	Volume_VOLUME_EMPTY      Volume_Type = 0
	Volume_VOLUME_FILESYSTEM Volume_Type = 1
	Volume_VOLUME_SECRET     Volume_Type = 2
)

// Enum value maps for Volume_Type.
var (
	Volume_Type_name = map[int32]string{
		0: "VOLUME_EMPTY",
		1: "VOLUME_FILESYSTEM",
		2: "VOLUME_SECRET",
	}
	Volume_Type_value = map[string]int32{
		"VOLUME_EMPTY":      0,
		"VOLUME_FILESYSTEM": 1,
		"VOLUME_SECRET":     2,
	}
)

func (x Volume_Type) Enum() *Volume_Type {
	p := new(Volume_Type)
	*p = x
	return p
}

func (x Volume_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Volume_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pod_proto_enumTypes[0].Descriptor()
}

func (Volume_Type) Type() protoreflect.EnumType {
	return &file_pod_proto_enumTypes[0]
}

func (x Volume_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Volume_Type.Descriptor instead.
func (Volume_Type) EnumDescriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{2, 0}
}

type Volume_AccessMode int32

const (
	Volume_VOLUME_RW_ONE Volume_AccessMode = 0
	// VOLUME_RO_MANY = 1;
	Volume_VOLUME_RW_MANY Volume_AccessMode = 2
)

// Enum value maps for Volume_AccessMode.
var (
	Volume_AccessMode_name = map[int32]string{
		0: "VOLUME_RW_ONE",
		2: "VOLUME_RW_MANY",
	}
	Volume_AccessMode_value = map[string]int32{
		"VOLUME_RW_ONE":  0,
		"VOLUME_RW_MANY": 2,
	}
)

func (x Volume_AccessMode) Enum() *Volume_AccessMode {
	p := new(Volume_AccessMode)
	*p = x
	return p
}

func (x Volume_AccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Volume_AccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pod_proto_enumTypes[1].Descriptor()
}

func (Volume_AccessMode) Type() protoreflect.EnumType {
	return &file_pod_proto_enumTypes[1]
}

func (x Volume_AccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Volume_AccessMode.Descriptor instead.
func (Volume_AccessMode) EnumDescriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{2, 1}
}

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Containers []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	Volumes    []*Volume    `protobuf:"bytes,2,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Replicas   *Replicas    `protobuf:"bytes,3,opt,name=replicas,proto3" json:"replicas,omitempty"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{0}
}

func (x *Pod) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *Pod) GetVolumes() []*Volume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Pod) GetReplicas() *Replicas {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type Container struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image            *Container_Image         `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Entrypoint       []string                 `protobuf:"bytes,3,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	Command          []string                 `protobuf:"bytes,4,rep,name=command,proto3" json:"command,omitempty"`
	WorkingDir       string                   `protobuf:"bytes,5,opt,name=workingDir,proto3" json:"workingDir,omitempty"`
	Ports            []*Container_Port        `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty"`
	Env              map[string]string        `protobuf:"bytes,7,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Volumes          []*Container_VolumeMount `protobuf:"bytes,8,rep,name=volumes,proto3" json:"volumes,omitempty"`
	ResourceRequests []*Resource              `protobuf:"bytes,9,rep,name=resourceRequests,proto3" json:"resourceRequests,omitempty"` // "cpu", "memory", custom
}

func (x *Container) Reset() {
	*x = Container{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{1}
}

func (x *Container) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container) GetImage() *Container_Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Container) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *Container) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Container) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *Container) GetPorts() []*Container_Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Container) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Container) GetVolumes() []*Container_VolumeMount {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *Container) GetResourceRequests() []*Resource {
	if x != nil {
		return x.ResourceRequests
	}
	return nil
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       Volume_Type       `protobuf:"varint,2,opt,name=type,proto3,enum=apocryph.proto.pod.Volume_Type" json:"type,omitempty"`
	AccessMode Volume_AccessMode `protobuf:"varint,3,opt,name=accessMode,proto3,enum=apocryph.proto.pod.Volume_AccessMode" json:"accessMode,omitempty"`
	// Types that are assignable to Configuration:
	//
	//	*Volume_Filesystem
	//	*Volume_Secret
	Configuration isVolume_Configuration `protobuf_oneof:"configuration"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{2}
}

func (x *Volume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Volume) GetType() Volume_Type {
	if x != nil {
		return x.Type
	}
	return Volume_VOLUME_EMPTY
}

func (x *Volume) GetAccessMode() Volume_AccessMode {
	if x != nil {
		return x.AccessMode
	}
	return Volume_VOLUME_RW_ONE
}

func (m *Volume) GetConfiguration() isVolume_Configuration {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (x *Volume) GetFilesystem() *Volume_FilesystemConfig {
	if x, ok := x.GetConfiguration().(*Volume_Filesystem); ok {
		return x.Filesystem
	}
	return nil
}

func (x *Volume) GetSecret() *Volume_SecretConfig {
	if x, ok := x.GetConfiguration().(*Volume_Secret); ok {
		return x.Secret
	}
	return nil
}

type isVolume_Configuration interface {
	isVolume_Configuration()
}

type Volume_Filesystem struct {
	Filesystem *Volume_FilesystemConfig `protobuf:"bytes,4,opt,name=filesystem,proto3,oneof"`
}

type Volume_Secret struct {
	Secret *Volume_SecretConfig `protobuf:"bytes,5,opt,name=secret,proto3,oneof"`
}

func (*Volume_Filesystem) isVolume_Configuration() {}

func (*Volume_Secret) isVolume_Configuration() {}

type Replicas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min                   uint32 `protobuf:"varint,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                   uint32 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	TargetPendingRequests uint32 `protobuf:"varint,3,opt,name=targetPendingRequests,proto3" json:"targetPendingRequests,omitempty"`
}

func (x *Replicas) Reset() {
	*x = Replicas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replicas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replicas) ProtoMessage() {}

func (x *Replicas) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replicas.ProtoReflect.Descriptor instead.
func (*Replicas) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{3}
}

func (x *Replicas) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Replicas) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Replicas) GetTargetPendingRequests() uint32 {
	if x != nil {
		return x.TargetPendingRequests
	}
	return 0
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	// Types that are assignable to Quantity:
	//
	//	*Resource_Amount
	//	*Resource_AmountMillis
	Quantity isResource_Quantity `protobuf_oneof:"quantity"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{4}
}

func (x *Resource) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (m *Resource) GetQuantity() isResource_Quantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (x *Resource) GetAmount() uint64 {
	if x, ok := x.GetQuantity().(*Resource_Amount); ok {
		return x.Amount
	}
	return 0
}

func (x *Resource) GetAmountMillis() uint64 {
	if x, ok := x.GetQuantity().(*Resource_AmountMillis); ok {
		return x.AmountMillis
	}
	return 0
}

type isResource_Quantity interface {
	isResource_Quantity()
}

type Resource_Amount struct {
	Amount uint64 `protobuf:"varint,2,opt,name=amount,proto3,oneof"`
}

type Resource_AmountMillis struct {
	AmountMillis uint64 `protobuf:"varint,3,opt,name=amountMillis,proto3,oneof"`
}

func (*Resource_Amount) isResource_Quantity() {}

func (*Resource_AmountMillis) isResource_Quantity() {}

type Container_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid    []byte `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	KeyIdx int32  `protobuf:"varint,2,opt,name=keyIdx,proto3" json:"keyIdx,omitempty"`
	Url    string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Container_Image) Reset() {
	*x = Container_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container_Image) ProtoMessage() {}

func (x *Container_Image) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container_Image.ProtoReflect.Descriptor instead.
func (*Container_Image) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Container_Image) GetCid() []byte {
	if x != nil {
		return x.Cid
	}
	return nil
}

func (x *Container_Image) GetKeyIdx() int32 {
	if x != nil {
		return x.KeyIdx
	}
	return 0
}

func (x *Container_Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Container_Port struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ContainerPort uint64 `protobuf:"varint,2,opt,name=containerPort,proto3" json:"containerPort,omitempty"`
	ServicePort   uint64 `protobuf:"varint,3,opt,name=servicePort,proto3" json:"servicePort,omitempty"`
	// Types that are assignable to ExposedPort:
	//
	//	*Container_Port_HostHttpHost
	//	*Container_Port_HostTcpPort
	ExposedPort isContainer_Port_ExposedPort `protobuf_oneof:"exposedPort"`
}

func (x *Container_Port) Reset() {
	*x = Container_Port{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container_Port) ProtoMessage() {}

func (x *Container_Port) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container_Port.ProtoReflect.Descriptor instead.
func (*Container_Port) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Container_Port) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container_Port) GetContainerPort() uint64 {
	if x != nil {
		return x.ContainerPort
	}
	return 0
}

func (x *Container_Port) GetServicePort() uint64 {
	if x != nil {
		return x.ServicePort
	}
	return 0
}

func (m *Container_Port) GetExposedPort() isContainer_Port_ExposedPort {
	if m != nil {
		return m.ExposedPort
	}
	return nil
}

func (x *Container_Port) GetHostHttpHost() string {
	if x, ok := x.GetExposedPort().(*Container_Port_HostHttpHost); ok {
		return x.HostHttpHost
	}
	return ""
}

func (x *Container_Port) GetHostTcpPort() uint64 {
	if x, ok := x.GetExposedPort().(*Container_Port_HostTcpPort); ok {
		return x.HostTcpPort
	}
	return 0
}

type isContainer_Port_ExposedPort interface {
	isContainer_Port_ExposedPort()
}

type Container_Port_HostHttpHost struct {
	HostHttpHost string `protobuf:"bytes,4,opt,name=hostHttpHost,proto3,oneof"`
}

type Container_Port_HostTcpPort struct {
	// string hostHttpsHost = 4;
	HostTcpPort uint64 `protobuf:"varint,5,opt,name=hostTcpPort,proto3,oneof"`
}

func (*Container_Port_HostHttpHost) isContainer_Port_ExposedPort() {}

func (*Container_Port_HostTcpPort) isContainer_Port_ExposedPort() {}

type Container_VolumeMount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MountPath string `protobuf:"bytes,2,opt,name=mountPath,proto3" json:"mountPath,omitempty"`
	ReadOnly  bool   `protobuf:"varint,3,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
}

func (x *Container_VolumeMount) Reset() {
	*x = Container_VolumeMount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Container_VolumeMount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container_VolumeMount) ProtoMessage() {}

func (x *Container_VolumeMount) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container_VolumeMount.ProtoReflect.Descriptor instead.
func (*Container_VolumeMount) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{1, 3}
}

func (x *Container_VolumeMount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Container_VolumeMount) GetMountPath() string {
	if x != nil {
		return x.MountPath
	}
	return ""
}

func (x *Container_VolumeMount) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

type Volume_FilesystemConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceRequests []*Resource `protobuf:"bytes,1,rep,name=resourceRequests,proto3" json:"resourceRequests,omitempty"` // "storage"
}

func (x *Volume_FilesystemConfig) Reset() {
	*x = Volume_FilesystemConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume_FilesystemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume_FilesystemConfig) ProtoMessage() {}

func (x *Volume_FilesystemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume_FilesystemConfig.ProtoReflect.Descriptor instead.
func (*Volume_FilesystemConfig) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Volume_FilesystemConfig) GetResourceRequests() []*Resource {
	if x != nil {
		return x.ResourceRequests
	}
	return nil
}

type Volume_SecretConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid            []byte `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"` // use 0x00 0x01 0x55 0x00 (unsigned-varint length) (raw contents) to encode the secret in the message
	KeyIdx         int32  `protobuf:"varint,2,opt,name=keyIdx,proto3" json:"keyIdx,omitempty"`
	File           string `protobuf:"bytes,101,opt,name=file,proto3" json:"file,omitempty"`
	Contents       []byte `protobuf:"bytes,102,opt,name=contents,proto3" json:"contents,omitempty"`
	ContentsString string `protobuf:"bytes,103,opt,name=contentsString,proto3" json:"contentsString,omitempty"`
}

func (x *Volume_SecretConfig) Reset() {
	*x = Volume_SecretConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pod_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume_SecretConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume_SecretConfig) ProtoMessage() {}

func (x *Volume_SecretConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pod_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume_SecretConfig.ProtoReflect.Descriptor instead.
func (*Volume_SecretConfig) Descriptor() ([]byte, []int) {
	return file_pod_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Volume_SecretConfig) GetCid() []byte {
	if x != nil {
		return x.Cid
	}
	return nil
}

func (x *Volume_SecretConfig) GetKeyIdx() int32 {
	if x != nil {
		return x.KeyIdx
	}
	return 0
}

func (x *Volume_SecretConfig) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Volume_SecretConfig) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *Volume_SecretConfig) GetContentsString() string {
	if x != nil {
		return x.ContentsString
	}
	return ""
}

var File_pod_proto protoreflect.FileDescriptor

var file_pod_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x70, 0x6f,
	0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x22,
	0xb4, 0x01, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79,
	0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x08,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x70, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x22, 0xcf, 0x06, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79,
	0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x12, 0x38, 0x0a,
	0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61,
	0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f,
	0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e,
	0x76, 0x12, 0x43, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x10,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x43, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xbb, 0x01,
	0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x24, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x48, 0x74, 0x74, 0x70, 0x48, 0x6f,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74,
	0x48, 0x74, 0x74, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0b, 0x68, 0x6f, 0x73, 0x74,
	0x54, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x0b, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x63, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x42, 0x0d, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x1a, 0x5b, 0x0a, 0x0b, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xa5, 0x05, 0x0a, 0x06, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x25, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79,
	0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x5c, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x48, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x6f, 0x63, 0x72, 0x79, 0x70, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x6f, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x1a, 0x90, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x42, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x56, 0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x4f, 0x4c, 0x55, 0x4d,
	0x45, 0x5f, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x10, 0x02, 0x22, 0x33, 0x0a, 0x0a, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x4f, 0x4c, 0x55,
	0x4d, 0x45, 0x5f, 0x52, 0x57, 0x5f, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x56,
	0x4f, 0x4c, 0x55, 0x4d, 0x45, 0x5f, 0x52, 0x57, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x10, 0x02, 0x42,
	0x0f, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x64, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78,
	0x12, 0x34, 0x0a, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x72, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0c, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x42, 0x0a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x72, 0x61, 0x64, 0x65,
	0x2d, 0x63, 0x6f, 0x6f, 0x70, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x2d, 0x70, 0x6f,
	0x64, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pod_proto_rawDescOnce sync.Once
	file_pod_proto_rawDescData = file_pod_proto_rawDesc
)

func file_pod_proto_rawDescGZIP() []byte {
	file_pod_proto_rawDescOnce.Do(func() {
		file_pod_proto_rawDescData = protoimpl.X.CompressGZIP(file_pod_proto_rawDescData)
	})
	return file_pod_proto_rawDescData
}

var file_pod_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pod_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_pod_proto_goTypes = []interface{}{
	(Volume_Type)(0),                // 0: apocryph.proto.pod.Volume.Type
	(Volume_AccessMode)(0),          // 1: apocryph.proto.pod.Volume.AccessMode
	(*Pod)(nil),                     // 2: apocryph.proto.pod.Pod
	(*Container)(nil),               // 3: apocryph.proto.pod.Container
	(*Volume)(nil),                  // 4: apocryph.proto.pod.Volume
	(*Replicas)(nil),                // 5: apocryph.proto.pod.Replicas
	(*Resource)(nil),                // 6: apocryph.proto.pod.Resource
	nil,                             // 7: apocryph.proto.pod.Container.EnvEntry
	(*Container_Image)(nil),         // 8: apocryph.proto.pod.Container.Image
	(*Container_Port)(nil),          // 9: apocryph.proto.pod.Container.Port
	(*Container_VolumeMount)(nil),   // 10: apocryph.proto.pod.Container.VolumeMount
	(*Volume_FilesystemConfig)(nil), // 11: apocryph.proto.pod.Volume.FilesystemConfig
	(*Volume_SecretConfig)(nil),     // 12: apocryph.proto.pod.Volume.SecretConfig
}
var file_pod_proto_depIdxs = []int32{
	3,  // 0: apocryph.proto.pod.Pod.containers:type_name -> apocryph.proto.pod.Container
	4,  // 1: apocryph.proto.pod.Pod.volumes:type_name -> apocryph.proto.pod.Volume
	5,  // 2: apocryph.proto.pod.Pod.replicas:type_name -> apocryph.proto.pod.Replicas
	8,  // 3: apocryph.proto.pod.Container.image:type_name -> apocryph.proto.pod.Container.Image
	9,  // 4: apocryph.proto.pod.Container.ports:type_name -> apocryph.proto.pod.Container.Port
	7,  // 5: apocryph.proto.pod.Container.env:type_name -> apocryph.proto.pod.Container.EnvEntry
	10, // 6: apocryph.proto.pod.Container.volumes:type_name -> apocryph.proto.pod.Container.VolumeMount
	6,  // 7: apocryph.proto.pod.Container.resourceRequests:type_name -> apocryph.proto.pod.Resource
	0,  // 8: apocryph.proto.pod.Volume.type:type_name -> apocryph.proto.pod.Volume.Type
	1,  // 9: apocryph.proto.pod.Volume.accessMode:type_name -> apocryph.proto.pod.Volume.AccessMode
	11, // 10: apocryph.proto.pod.Volume.filesystem:type_name -> apocryph.proto.pod.Volume.FilesystemConfig
	12, // 11: apocryph.proto.pod.Volume.secret:type_name -> apocryph.proto.pod.Volume.SecretConfig
	6,  // 12: apocryph.proto.pod.Volume.FilesystemConfig.resourceRequests:type_name -> apocryph.proto.pod.Resource
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_pod_proto_init() }
func file_pod_proto_init() {
	if File_pod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replicas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container_Port); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Container_VolumeMount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume_FilesystemConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pod_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume_SecretConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pod_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Volume_Filesystem)(nil),
		(*Volume_Secret)(nil),
	}
	file_pod_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Resource_Amount)(nil),
		(*Resource_AmountMillis)(nil),
	}
	file_pod_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Container_Port_HostHttpHost)(nil),
		(*Container_Port_HostTcpPort)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pod_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pod_proto_goTypes,
		DependencyIndexes: file_pod_proto_depIdxs,
		EnumInfos:         file_pod_proto_enumTypes,
		MessageInfos:      file_pod_proto_msgTypes,
	}.Build()
	File_pod_proto = out.File
	file_pod_proto_rawDesc = nil
	file_pod_proto_goTypes = nil
	file_pod_proto_depIdxs = nil
}
