{{ if .Values.dns.enable }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: dns-config
data:
  {{ if .Values.serf.enable }}
  Corefile: |
    . {
        reload
        errors
        health {
            lameduck 5s
        }
        ready
        log
        cache
        rewrite name suffix {{ .Values.nginx.globalHostConsole }}. {{ .Values.nginx.globalHost }}. answer auto
        aapp_dns {
          base s{{ .Values.nginx.globalHost }}.
          serf serf-rpc.{{ .Release.Namespace }}.svc.cluster.local:7373
        }
        forward . /etc/resolv.conf
    }
  {{ else }}
  Corefile: |
    . {
        reload
        errors
        health {
            lameduck 5s
        }
        ready
        log
        cache
        rewrite stop name regex (.*)\.({{ .Values.nginx.globalHost }}|{{ .Values.nginx.globalHostConsole }})\.$ aapp-nginx.{{ .Release.Namespace }}.svc.cluster.local answer auto
        forward . /etc/resolv.conf
    }
  {{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aapp-dns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aapp-dns
  template:
    metadata:
      labels:
        app: aapp-dns
    spec:
      containers:
      - name: dns
        image: {{ .Values.dns.image }}
        workingDir: /config
        volumeMounts:
        - name: configs
          mountPath: /config
          readOnly: true
        ports:
        - containerPort: 53
        - containerPort: 53
          protocol: UDP
      volumes:
      - name: configs
        configMap:
          name: dns-config
---
apiVersion: v1
kind: Service
metadata:
  name: dns-backend
spec:
  selector:
    app: aapp-dns
  ports:
  - name: dns-tcp
    protocol: TCP
    port: 53
  - name: dns-udp
    protocol: UDP
    port: 53
  clusterIP: {{ .Values.dns.clusterIp }}
 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aapp-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aapp-proxy
  template:
    metadata:
      labels:
        app: aapp-proxy
    spec:
      containers:
      - name: proxy
        image: {{ .Values.proxy.image }}
        ports:
        - containerPort: 1080
      dnsConfig:
        nameservers:
        - {{ .Values.dns.clusterIp }}
      dnsPolicy: None
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
spec:
  selector:
    app: aapp-proxy
  ports:
  - name: socks5
    port: 1080
{{ end }}
